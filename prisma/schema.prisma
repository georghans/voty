// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  binaryTargets   = ["native"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Vote {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  votedFor       Video    @relation(name: "votesFor", fields: [votedForId], references: [id])
  votedForId     Int
  votedAgainst   Video    @relation(name: "votesAgainst", fields: [votedAgainstId], references: [id])
  votedAgainstId Int
  Voting         Voting   @relation(fields: [votingId], references: [id])
  votingId       Int
  User           User     @relation(fields: [userId], references: [id])
  userId         Int

  @@index([votedForId])
  @@index([votedAgainstId])
  @@index([votingId])
  @@index([userId])
}

model Video {
  id           Int    @id @default(autoincrement())
  title        String
  url          String
  VoteFor      Vote[] @relation("votesFor")
  VoteAgainst  Vote[] @relation("votesAgainst")
  Voting       Voting @relation(fields: [votingId], references: [id])
  votingId     Int
  thumbnailB64 String @db.LongText

  @@index([votingId])
}

model Voting {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  createdAt   DateTime @default(now())
  videos      Video[]
  User        User     @relation(fields: [userId], references: [id])
  userId      Int
  Vote        Vote[]

  @@index([userId])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Voting    Voting[]
  Vote      Vote[]
}
